// unix_io_calls.c
// Demonstrates fcntl, lseek, stat, opendir, readdir

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <errno.h>

int main() {
    const char *fname = "unix_io_demo.txt";
    int fd = open(fname, O_CREAT | O_RDWR, 0644);
    if (fd < 0) { perror("open"); return 1; }

    // fcntl: get flags
    int flags = fcntl(fd, F_GETFL);
    if (flags == -1) perror("fcntl F_GETFL");
    else printf("File flags for %s: %d\n", fname, flags);

    // write something and lseek
    const char *s = "IO demo\n";
    write(fd, s, strlen(s));
    if (lseek(fd, 0, SEEK_SET) < 0) perror("lseek");

    // stat
    struct stat st;
    if (stat(fname, &st) == 0) {
        printf("%s size: %lld bytes, mode: %o\n", fname, (long long)st.st_size, st.st_mode & 0777);
    } else perror("stat");

    close(fd);

    // opendir/readdir
    const char *dirpath = ".";
    DIR *d = opendir(dirpath);
    if (!d) { perror("opendir"); return 1; }
    printf("Directory listing of %s:\n", dirpath);
    struct dirent *de;
    while ((de = readdir(d)) != NULL) {
        printf("  %s\n", de->d_name);
    }
    closedir(d);
    return 0;
}
