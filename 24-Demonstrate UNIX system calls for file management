// unix_file_syscalls.c
// Demonstrates open, read, write, lseek, close

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>
#include <stdlib.h>

int main() {
    const char *fname = "demo_syscall.txt";
    int fd = open(fname, O_CREAT | O_RDWR | O_TRUNC, 0644);
    if (fd < 0) { perror("open"); return 1; }

    const char *text = "Hello from system calls!\n";
    ssize_t w = write(fd, text, strlen(text));
    if (w < 0) { perror("write"); close(fd); return 1; }

    // lseek to beginning and read
    if (lseek(fd, 0, SEEK_SET) < 0) { perror("lseek"); close(fd); return 1; }

    char buf[100];
    ssize_t r = read(fd, buf, sizeof(buf)-1);
    if (r < 0) { perror("read"); close(fd); return 1; }
    buf[r] = '\0';
    printf("Read from file: %s", buf);

    close(fd);
    printf("\nWrote and read %s\n", fname);
    return 0;
}
